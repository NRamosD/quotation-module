# Generated by Django 3.2.6 on 2021-09-10 13:50

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id_category_product', models.AutoField(db_column='ID_CATEGORY_PRODUCT', primary_key=True, serialize=False)),
                ('category_vehicle', models.CharField(db_column='ID_CATEGORY_VEHICLE', max_length=20)),
                ('category_name', models.CharField(db_column='CATGORY_NAME', max_length=100)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=200, null=True)),
            ],
            options={
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('id_quote', models.AutoField(db_column='ID_QUOTE', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=100, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, db_column='DATE')),
                ('total', models.DecimalField(db_column='TOTAL', decimal_places=3, max_digits=12)),
            ],
            options={
                'db_table': 'quotes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id_role', models.AutoField(db_column='ID_ROLE', primary_key=True, serialize=False)),
                ('role_name', models.CharField(db_column='ROLE_NAME', max_length=100)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=200, null=True)),
            ],
            options={
                'db_table': 'role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id_supplier', models.AutoField(db_column='ID_SUPPLIER', primary_key=True, serialize=False)),
                ('supplier_name', models.CharField(db_column='SUPPLIER_NAME', max_length=100)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=200, null=True)),
                ('conctact_name', models.CharField(db_column='CONCTACT_NAME', max_length=150)),
                ('landline', models.CharField(blank=True, db_column='LANDLINE', max_length=15, null=True)),
                ('mobile_phone', models.CharField(blank=True, db_column='MOBILE_PHONE', max_length=15, null=True)),
                ('email', models.CharField(db_column='EMAIL', max_length=150)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=200, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=100, null=True)),
                ('province', models.CharField(blank=True, db_column='PROVINCE', max_length=100, null=True)),
                ('country', models.CharField(blank=True, db_column='COUNTRY', max_length=100, null=True)),
            ],
            options={
                'db_table': 'suppliers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id_product', models.AutoField(db_column='ID_PRODUCT', primary_key=True, serialize=False)),
                ('product_name', models.CharField(db_column='PRODUCT_NAME', max_length=100)),
                ('description', models.CharField(blank=True, db_column='DESCRIPTION', max_length=200, null=True)),
                ('price', models.DecimalField(db_column='PRICE', decimal_places=4, max_digits=9)),
                ('brand', models.CharField(blank=True, db_column='BRAND', max_length=100, null=True)),
                ('availability', models.IntegerField(blank=True, db_column='AVAILABILITY', null=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True, db_column='REGISTRATION_DATE')),
                ('last_modified', models.DateTimeField(auto_now=True, db_column='LAST_MODIFIED')),
                ('id_category_product', models.ForeignKey(db_column='ID_CATEGORY_PRODUCT', on_delete=django.db.models.deletion.DO_NOTHING, related_name='FK_ID_CATEGORY_PRODUCT', to='quote.category')),
                ('id_supplier', models.ForeignKey(db_column='ID_SUPPLIER', on_delete=django.db.models.deletion.DO_NOTHING, to='quote.suppliers')),
            ],
            options={
                'db_table': 'product',
                'managed': True,
                'unique_together': {('id_product', 'id_supplier')},
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_user', models.AutoField(db_column='ID_USER', primary_key=True, serialize=False)),
                ('id_card', models.CharField(db_column='ID_CARD', max_length=10, unique=True)),
                ('gender', models.CharField(db_column='GENDER', max_length=1)),
                ('born_date', models.DateTimeField(db_column='BORN_DATE')),
                ('landline', models.CharField(blank=True, db_column='LANDLINE', max_length=10, null=True)),
                ('movile_phone', models.CharField(db_column='MOVILE_PHONE', max_length=10)),
                ('user', models.CharField(db_column='USER', max_length=50)),
                ('city', models.CharField(db_column='CITY', max_length=100)),
                ('province', models.CharField(db_column='PROVINCE', max_length=100)),
                ('country', models.CharField(db_column='COUNTRY', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('id_role', models.ForeignKey(db_column='ID_ROLE', on_delete=django.db.models.deletion.DO_NOTHING, to='quote.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='qDetails',
            fields=[
                ('id_qdetails', models.AutoField(db_column='ID_qdetails', primary_key=True, serialize=False)),
                ('amount', models.IntegerField(db_column='AMOUNT')),
                ('subtotal', models.DecimalField(db_column='SUBTOTAL', decimal_places=3, max_digits=12)),
                ('id_product', models.ForeignKey(db_column='ID_PRODUCT', on_delete=django.db.models.deletion.DO_NOTHING, related_name='FK_ID_PRODUCT', to='quote.product')),
                ('id_quote', models.ForeignKey(db_column='ID_QUOTE', on_delete=django.db.models.deletion.DO_NOTHING, to='quote.quotes')),
            ],
            options={
                'db_table': 'qdetails',
                'managed': True,
                'unique_together': {('id_quote', 'id_product')},
            },
        ),
    ]
